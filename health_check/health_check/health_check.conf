# When this config is loaded by the health check "service" it will use the following configuration parameters:
[HealthCheckService]
# Paths to the various local health check scripts.
live_check_script = /opt/health_check/check_scripts/example_live_check.sh
ready_check_script = /opt/health_check/check_scripts/example_ready_check.sh
health_check_script = /opt/health_check/check_scripts/example_health_check.sh

# The TCP port(s) that should be checked when doing a TCP health check.
# This should be a comma separated list of ports. The health_check_service will
# attempt to connect to each port internally and return the status along with the
# external ports that the health_check_client.py should check. The
# health_check_client.py will attempt to connect to each of the external TCP ports.
# If both internal and external checks are successful, then the TCP health check
# will pass.
#
# NOTE: This example has the same ports for internal and external, but internal
#       and external ports do not have to be the same. The internal ports could
#       be different if needed as would be the case if the external ports are
#       mapped to different internal ports.
tcp_check_internal_ports = 22,5757
tcp_check_external_ports = 22,5757

# The name of the "service" that the health check is for.
# This should be something like the name of the microservice that is being health checked.
# This name will be included in the health check responses.
monitored_service_name = Foo Bar Microservice

# (bool) If True, then include data details of the health check script(s) in the health check responses.
include_data_details = False

# The IP address to bind to. Default is 0.0.0.0 (all IP addresses).
listen_ip = 0.0.0.0

# The TCP port the service will listen on.
listen_port = 5757

# The number of times to retry starting the service.
retry_count = 5

# The number of seconds to wait after a service start failure before attempting again to start the service.
retry_wait_time = 3

# The path to the favicon.ico file to use for the health check service.
favicon_path = /opt/health_check/favicon.ico

#  The log output level. Valid values are: DEBUG, INFO, WARNING, ERROR
log_level = INFO

# When true, the configuration will be output upon startup.
show_config_on_startup = True


# When this config is loaded by the health check "client" it will use the following configuration parameters:
[HealthCheckClient]
# The IP address or hostname of the remote server to connect to.
remote_host = 127.0.0.1

# The TCP port of the remote server to connect to.
remote_port = 5757

# The number of times to retry connecting to server.
retry_count = 5

# The number of seconds to wait after a connection attempt fails before attempting again to connect.
retry_wait_time = 3

# The log output level. Valid values are: DEBUG, INFO, WARNING, ERROR
log_level = INFO

# (bool) If True, then include data details of the health check script(s) in the health check responses.
include_data_details = False

# When true, the configuration will be output upon startup.
show_config_on_startup = False
